z=c(poke_evols$PC3.x[i], poke_evols$PC3.y[i]),arrowhead=1,
type="scatter3d", mode="lines", line=list(color="gray", shape="arrow"), showlegend=F)
}
pokeplot
pokeplot <- plot_ly()
pokeplot <- pokeplot %>%
add_trace(data=poke_coords, x=~PC1, y=~PC2, z=~PC3, color=~Type)
for (i in 1:nrow(poke_evols)) {
pokeplot <- pokeplot %>%
add_annotations(x=c(poke_evols$PC1.x[i], poke_evols$PC1.y[i]),
y=c(poke_evols$PC2.x[i], poke_evols$PC2.y[i]),
z=c(poke_evols$PC3.x[i], poke_evols$PC3.y[i]),arrowhead=1, text="", showlegend=F)
}
pokeplot
pokeplot <- plot_ly()
pokeplot <- pokeplot %>%
add_trace(data=poke_coords, x=~PC1, y=~PC2, z=~PC3, color=~Type)
for (i in 1:nrow(poke_evols)) {
pokeplot <- pokeplot %>%
add_trace(x=c(poke_evols$PC1.x[i], poke_evols$PC1.y[i]),
y=c(poke_evols$PC2.x[i], poke_evols$PC2.y[i]),
z=c(poke_evols$PC3.x[i], poke_evols$PC3.y[i]),arrowhead=1,
type="scatter3d", mode="lines", line=list(color="gray", shape="arrow"), showlegend=F)
}
pokeplot
poke_coords
pokeplot <- plot_ly()
pokeplot <- pokeplot %>%
add_trace(data=poke_coords, x=~PC1, y=~PC2, z=~PC3, color=~Type,
hoverinfo='hover',
hover=paste0("<br>Name: ", Pokemon))
pokeplot <- plot_ly()
pokeplot <- pokeplot %>%
add_trace(data=poke_coords, x=~PC1, y=~PC2, z=~PC3, color=~Type,
hoverinfo='hover',
hover=paste0("<br>Name: ", ~Pokemon))
for (i in 1:nrow(poke_evols)) {
pokeplot <- pokeplot %>%
add_trace(x=c(poke_evols$PC1.x[i], poke_evols$PC1.y[i]),
y=c(poke_evols$PC2.x[i], poke_evols$PC2.y[i]),
z=c(poke_evols$PC3.x[i], poke_evols$PC3.y[i]),arrowhead=1,
type="scatter3d", mode="lines", line=list(color="gray", shape="arrow"), showlegend=F)
}
pokeplot
poke_coords
pokeplot <- plot_ly()
pokeplot <- pokeplot %>%
add_trace(data=poke_coords, x=~PC1, y=~PC2, z=~PC3, color=~Type,
hoverinfo='hover',
hover=paste0("<br>Name: ", Pokemon))
pokeplot <- plot_ly(poke_coords)
pokeplot <- pokeplot %>%
add_trace(x=~PC1, y=~PC2, z=~PC3, color=~Type,
hoverinfo='hover',
hover=paste0("<br>Name: ", Pokemon))
pokeplot <- plot_ly()
pokeplot <- pokeplot %>%
add_trace(data=poke_coords, x=~PC1, y=~PC2, z=~PC3, color=~Type,
hoverinfo='hover',
hover=paste0("<br>Name: ", poke_coords$Pokemon))
for (i in 1:nrow(poke_evols)) {
pokeplot <- pokeplot %>%
add_trace(x=c(poke_evols$PC1.x[i], poke_evols$PC1.y[i]),
y=c(poke_evols$PC2.x[i], poke_evols$PC2.y[i]),
z=c(poke_evols$PC3.x[i], poke_evols$PC3.y[i]), arrowhead=1, hoverinfo=NULL,
type="scatter3d", mode="lines", line=list(color="gray", shape="arrow"), showlegend=F)
}
pokeplot
pokeplot <- plot_ly()
pokeplot <- pokeplot %>%
add_trace(data=poke_coords, x=~PC1, y=~PC2, z=~PC3, color=~Type,
hoverinfo='hover',
hover=paste0("<br>Name: ", poke_coords$Pokemon))
for (i in 1:nrow(poke_evols)) {
pokeplot <- pokeplot %>%
add_trace(x=c(poke_evols$PC1.x[i], poke_evols$PC1.y[i]),
y=c(poke_evols$PC2.x[i], poke_evols$PC2.y[i]),
z=c(poke_evols$PC3.x[i], poke_evols$PC3.y[i]), arrowhead=1, name="",
type="scatter3d", mode="lines", line=list(color="gray", shape="arrow"), showlegend=F)
}
pokeplot
poke_coords
data
data <- tbl_df(read.csv("~/DataScience/9.Product/assignment3/pokemon.csv"))
data_pca <- data %>%
select(HP:Spd) %>% as.matrix
row.names(data_pca) <- data$Pokemon
pca_result <- prcomp(data_pca)
poke_coords <- data.frame(pca_result$x[, 1:3],
Pokemon=data$Pokemon,
Type=data$Type.I,
EvolvesInto=data$Evolves.Into,
HoverInfo=paste0("<br>Name: ", data$Pokemon,
"<br>HP: ", data$HP,
"<br>Attack: ", data$Atk,
"<br>Defense: ", data$Def,
"<br>Sp. Attack: ", data$SA,
"<br>Sp. Defense: ", data$SD,
"<br>Speed: ", data$Spd,))
poke_coords <- data.frame(pca_result$x[, 1:3],
Pokemon=data$Pokemon,
Type=data$Type.I,
EvolvesInto=data$Evolves.Into,
HoverInfo=paste0("<br>Name: ", data$Pokemon,
"<br>HP: ", data$HP,
"<br>Attack: ", data$Atk,
"<br>Defense: ", data$Def,
"<br>Sp. Attack: ", data$SA,
"<br>Sp. Defense: ", data$SD,
"<br>Speed: ", data$Spd))
poke_coords
poke_evols <- poke_coords %>%
filter(!EvolvesInto == "--")
poke_evols <- merge(poke_coords, poke_coords, by.x="Pokemon", by.y="EvolvesInto")
pokeplot <- plot_ly()
pokeplot <- pokeplot %>%
add_trace(data=poke_coords, x=~PC1, y=~PC2, z=~PC3, color=~Type,
hoverinfo=~HoverInfo)
for (i in 1:nrow(poke_evols)) {
pokeplot <- pokeplot %>%
add_trace(x=c(poke_evols$PC1.x[i], poke_evols$PC1.y[i]),
y=c(poke_evols$PC2.x[i], poke_evols$PC2.y[i]),
z=c(poke_evols$PC3.x[i], poke_evols$PC3.y[i]), arrowhead=1, name=NULL,
type="scatter3d", mode="lines", line=list(color="gray", shape="arrow"), showlegend=F)
}
pokeplot
pokeplot <- plot_ly()
pokeplot <- pokeplot %>%
add_trace(data=poke_coords, x=~PC1, y=~PC2, z=~PC3, color=~Type,
hoverinfo=~HoverInfo)
for (i in 1:nrow(poke_evols)) {
pokeplot <- pokeplot %>%
add_trace(x=c(poke_evols$PC1.x[i], poke_evols$PC1.y[i]),
y=c(poke_evols$PC2.x[i], poke_evols$PC2.y[i]),
z=c(poke_evols$PC3.x[i], poke_evols$PC3.y[i]), arrowhead=1, name=NULL,
type="scatter3d", mode="lines", line=list(color="gray", shape="arrow"), showlegend=F)
}
pokeplot
poke_coords
pokeplot <- plot_ly()
pokeplot <- pokeplot %>%
add_trace(data=poke_coords, x=~PC1, y=~PC2, z=~PC3, color=~Type,
text=~HoverInfo,
hoverinfo=~text)
for (i in 1:nrow(poke_evols)) {
pokeplot <- pokeplot %>%
add_trace(x=c(poke_evols$PC1.x[i], poke_evols$PC1.y[i]),
y=c(poke_evols$PC2.x[i], poke_evols$PC2.y[i]),
z=c(poke_evols$PC3.x[i], poke_evols$PC3.y[i]), arrowhead=1, name=NULL,
type="scatter3d", mode="lines", line=list(color="gray", shape="arrow"), showlegend=F)
}
pokeplot
shiny::runApp('PokExplorer')
runApp('PokExplorer')
runApp()
runApp()
runApp('PokExplorer')
runApp('PokExplorer')
runApp()
runApp('PokExplorer')
runApp()
runApp('PokExplorer')
runApp()
runApp('PokExplorer')
runApp('PokExplorer')
runApp()
runApp('PokExplorer')
runApp()
runApp('PokExplorer')
runApp()
runApp('PokExplorer')
runApp()
runApp('PokExplorer')
runApp()
runApp('PokExplorer')
runApp('PokExplorer')
runApp('PokExplorer')
runApp('PokExplorer')
runApp('PokExplorer')
runApp('PokExplorer')
poke_coords
# load data
data <- tbl_df(read.csv("~/DataScience/9.Product/assignment3/pokemon.csv"))
# make slugs
data$Slug <- data$Pokemon %>%
gsub(".", "", ., fixed=T) %>%
gsub("'", "", .) %>%
gsub(" ", "-", .) %>%
tolower
# calculate PCA
data_pca <- data %>%
select(HP:Spd) %>% as.matrix
row.names(data_pca) <- data$Pokemon
pca_result <- prcomp(data_pca, scale=T)
stats_coords <- data.frame(pca_result$rotation[, 1:3] * 5)
poke_coords <- data.frame(pca_result$x[, 1:3],
Pokemon=data$Pokemon,
Type=data$Type.I,
EvolvesInto=data$Evolves.Into,
Sprite=paste0("./sprites/", data$Slug, ".png"),
HoverInfo=paste0("<br>Number: ", data$Nat,
"<br>Name: ", data$Pokemon,
"<br>Type: ", data$Type.I,
"<br>HP: ", data$HP,
"<br>Attack: ", data$Atk,
"<br>Defense: ", data$Def,
"<br>Sp. Attack: ", data$SA,
"<br>Sp. Defense: ", data$SD,
"<br>Speed: ", data$Spd))
# trace evolution lines
poke_evols <- poke_coords %>%
filter(!EvolvesInto == "--")
poke_evols <- merge(poke_coords, poke_coords, by.x="Pokemon", by.y="EvolvesInto") %>%
select(PC1.x, PC2.x, PC3.x, PC1.y, PC2.y, PC3.y)
selected_poke <-  poke_coords %>%
filter(Pokemon==input$select) %>%
pull(HoverInfo)
poke_coords
runApp('PokExplorer')
selected_poke <-  poke_coords %>%
filter(Pokemon=="Mew") %>%
pull(HoverInfo)
selected_poke
runApp('PokExplorer')
runApp('PokExplorer')
runApp('PokExplorer')
poke_coords <- data.frame(pca_result$x[, 1:3],
Pokemon=data$Pokemon,
Type=data$Type.I,
EvolvesInto=data$Evolves.Into,
Sprite=paste0("./sprites/", data$Slug, ".png"),
InfoText=paste0("<br>Type: ", data$Type.I,
"<br>HP: ", data$HP,
"<br>Attack: ", data$Atk,
"<br>Defense: ", data$Def,
"<br>Sp. Attack: ", data$SA,
"<br>Sp. Defense: ", data$SD,
"<br>Speed: ", data$Spd),
HoverInfo=paste0("<br>Number: ", data$Nat,
"<br>Name: ", data$Pokemon,
InfoText)
)
runApp('PokExplorer')
runApp()
runApp('PokExplorer')
runApp('PokExplorer')
runApp('PokExplorer')
install.packages("shinydashboard")
runApp()
runApp('PokExplorer')
runApp('PokExplorer')
runApp()
runApp('PokExplorer')
?addResourcePath
runApp('PokExplorer')
runApp('PokExplorer')
runApp()
runApp('PokExplorer')
# load data
data <- tbl_df(read.csv("~/DataScience/9.Product/assignment3/pokemon.csv"))
# make slugs
data$Slug <- data$Pokemon %>%
gsub(".", "", ., fixed=T) %>%
gsub("'", "", .) %>%
gsub(" ", "-", .) %>%
tolower
# calculate PCA
data_pca <- data %>%
select(HP:Spd) %>% as.matrix
row.names(data_pca) <- data$Pokemon
pca_result <- prcomp(data_pca, scale=T)
stats_coords <- data.frame(pca_result$rotation[, 1:3] * 5)
poke_img <- paste0("./www/", data$Slug, ".png")
poke_img
poke_sprites <- vapply(poke_img$Sprite, function(x) {
dataURI(file = x)}, FUN.VALUE = character(1L))
poke_sprites <- vapply(poke_img, function(x) {
dataURI(file = x)}, FUN.VALUE = character(1L))
poke_img
poke_sprites <- vapply(poke_img, function(x) {
base64enc::dataURI(file = x)}, FUN.VALUE = character(1L))
poke_img <- paste0("~/DataScience/9.Product/assignment3//www/", data$Slug, ".png")
poke_sprites <- vapply(poke_img, function(x) {
base64enc::dataURI(file = x)}, FUN.VALUE = character(1L))
poke_coords <- data.frame(pca_result$x[, 1:3],
Pokemon=data$Pokemon,
Type=data$Type.I,
EvolvesInto=data$Evolves.Into,
Sprite=,
InfoText=paste0("<br>Type: ", data$Type.I,
"<br>HP: ", data$HP,
"<br>Attack: ", data$Atk,
"<br>Defense: ", data$Def,
"<br>Sp. Attack: ", data$SA,
"<br>Sp. Defense: ", data$SD,
"<br>Speed: ", data$Spd,
"<br>Evolves from: ", data$Evolves.From,
"<br>Evolves into: ", data$Evolves.Into)
)
poke_coords <- data.frame(pca_result$x[, 1:3],
Pokemon=data$Pokemon,
Type=data$Type.I,
EvolvesInto=data$Evolves.Into,
Sprite=,
InfoText=paste0("<br>Type: ", data$Type.I,
"<br>HP: ", data$HP,
"<br>Attack: ", data$Atk,
"<br>Defense: ", data$Def,
"<br>Sp. Attack: ", data$SA,
"<br>Sp. Defense: ", data$SD,
"<br>Speed: ", data$Spd,
"<br>Evolves from: ", data$Evolves.From,
"<br>Evolves into: ", data$Evolves.Into)
)
poke_coords <- data.frame(pca_result$x[, 1:3],
Pokemon=data$Pokemon,
Type=data$Type.I,
EvolvesInto=data$Evolves.Into,
Sprite=poke_sprites,
InfoText=paste0("<br>Type: ", data$Type.I,
"<br>HP: ", data$HP,
"<br>Attack: ", data$Atk,
"<br>Defense: ", data$Def,
"<br>Sp. Attack: ", data$SA,
"<br>Sp. Defense: ", data$SD,
"<br>Speed: ", data$Spd,
"<br>Evolves from: ", data$Evolves.From,
"<br>Evolves into: ", data$Evolves.Into)
)
poke_coords$HoverInfo=paste0("<br>Number: ", data$Nat,
"<br>Name: ", data$Pokemon,
poke_coords$InfoText)
# trace evolution lines
poke_evols <- poke_coords %>%
filter(!EvolvesInto == "--")
poke_evols <- merge(poke_coords, poke_coords, by.x="Pokemon", by.y="EvolvesInto") %>%
select(PC1.x, PC2.x, PC3.x, PC1.y, PC2.y, PC3.y)
runApp('PokExplorer')
runApp('PokExplorer')
runApp()
runApp('PokExplorer')
runApp('PokExplorer')
runApp()
runApp()
runApp('PokExplorer')
shiny::runApp('DataScience/9.Product/assignment3/PokExplorer')
runApp('DataScience/9.Product/assignment3/PokExplorer')
runApp('DataScience/9.Product/assignment3/PokExplorer')
runApp()
setwd("DataScience/9.Product/assignment3/")
setwd("~/DataScience/9.Product/assignment3/PokExplorer/")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?prcomp
runApp()
pca_result
# load data
data <- tbl_df(read.csv("www/pokemon.csv"))
# make slugs
data$Slug <- data$Pokemon %>%
gsub(".", "", ., fixed=T) %>%
gsub("'", "", .) %>%
gsub(" ", "-", .) %>%
tolower
# calculate PCA
data_pca <- data %>%
select(HP:Spd) %>% as.matrix
row.names(data_pca) <- data$Pokemon
pca_result <- prcomp(data_pca, center=T, scale=T)
pca_result
pca_result$x
?merge
data <- merge(data, pca_result)
data <- merge(data, pca_result$x)
data
# load data
data <- tbl_df(read.csv("www/pokemon.csv"))
# make slugs
data$Slug <- data$Pokemon %>%
gsub(".", "", ., fixed=T) %>%
gsub("'", "", .) %>%
gsub(" ", "-", .) %>%
tolower
# calculate PCA
data_pca <- data %>%
select(HP:Spd) %>% as.matrix
row.names(data_pca) <- data$Pokemon
pca_result <- prcomp(data_pca, center=T, scale=T)
data <- cbind(data, pca_result$x)
data
runApp()
paste0(c("A", "B", "C"), c("X", "Y"))
combine(c("A", "B", "C"), c("X", "Y"))
combn(c("A", "B", "C"), c("X", "Y"))
?combn
outer(c("A", "B", "C"), c("X", "Y"))
outer(c("A", "B", "C"), c("X", "Y"), paste, sep=".")
as.vector(outer(c("A", "B", "C"), c("X", "Y"), paste, sep="."))
runApp()
runApp()
runApp()
# load data
data <- tbl_df(read.csv("www/pokemon.csv"))
# make slugs
data$Slug <- data$Pokemon %>%
gsub(".", "", ., fixed=T) %>%
gsub("'", "", .) %>%
gsub(" ", "-", .) %>%
tolower
# calculate PCA
data_pca <- data %>%
select(HP:Spd) %>% as.matrix
row.names(data_pca) <- data$Pokemon
pca_result <- prcomp(data_pca, center=T, scale=T)
# get stats coords
stats_coords <- data.frame(pca_result$rotation)
names(stats_coords) <- c("HP", "Attack", "Defense", "Sp. Attack", "Sp. Defense", "Speed")
# make dataframe for plotting
poke_coords <- data.frame(Pokemon=data$Pokemon,
pca_result$x,
Type=data$Type.I,
EvolvesInto=data$Evolves.Into,
Sprite=paste0("www/", data$Slug, ".png"),
InfoText=paste0("<br>Type: ", data$Type.I,
"<br>HP: ", data$HP,
"<br>Attack: ", data$Atk,
"<br>Defense: ", data$Def,
"<br>Sp. Attack: ", data$SA,
"<br>Sp. Defense: ", data$SD,
"<br>Speed: ", data$Spd,
"<br>Evolves from: ", data$Evolves.From,
"<br>Evolves into: ", data$Evolves.Into)
)
poke_coords$HoverInfo <- paste0("<br>Number: ", data$Nat,
"<br>Name: ", data$Pokemon,
poke_coords$InfoText)
poke_coords
# trace evolution lines
poke_evols <- poke_coords %>%
filter(EvolvesInto != "--")
poke_evols <- merge(poke_coords, poke_coords, by.x="Pokemon", by.y="EvolvesInto")
poke_evols
dim1 <- "PC1"
dim2 <- PC"2"
dim2 <- "PC2"
dim3 <- "PC3"
poke_evols <- poke_evols[,as.vector(outer(c(dim1, dim2, dim3), c(".x", ".y"), paste, sep="."))]
as.vector(outer(c(dim1, dim2, dim3), c(".x", ".y"), paste, sep="."))
poke_evols <- poke_evols[,as.vector(outer(c(dim1, dim2, dim3), c(".x", ".y"), paste0))]
poke_evols
runApp()
names(stats_coords)
runApp()
stats_coords
pca_result <- prcomp(data_pca, center=T, scale=T)
# get stats coords
stats_coords <- data.frame(pca_result$rotation)
rownames(stats_coords) <- c("HP", "Attack", "Defense", "Sp. Attack", "Sp. Defense", "Speed")
stats_coords
runApp()
runApp()
runApp()
poke_evols
runApp()
?add_trace
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
